<?php
namespace Bethel\EntityBundle\DataFixtures\ORM;

use Doctrine\Common\DataFixtures\AbstractFixture;
use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Doctrine\Common\Persistence\ObjectManager;
use Bethel\EntityBundle\Entity\Schedule;

class LoadScheduleData extends AbstractFixture implements OrderedFixtureInterface, ContainerAwareInterface {
    /**
     * @var ContainerInterface
     */
    private $container;

    private $em;

    /**
     * {@inheritDoc}
     */
    public function setContainer(ContainerInterface $container = null) {
        $this->container = $container;
        $this->em = $this->container->get('doctrine.orm.entity_manager');
    }

    /**
     * {@inheritDoc}
     */
    public function load(ObjectManager $manager) {

        $scheduleOne = new Schedule();

        $scheduleOne->setDayOfWeek(0);
        $scheduleOne->setStartTime(new \DateTime("20:00:00"));
        $scheduleOne->setEndTime(new \DateTime("21:00:00"));
        $scheduleOne->setName('Sunday CS Lab');

        $scheduleOne->setRoom('CC 230');
        $scheduleOne->setTerm('Spring');

        $manager->persist($scheduleOne);

        $scheduleTwo = new Schedule();

        $scheduleTwo->setDayOfWeek(1);
        $scheduleTwo->setStartTime(new \DateTime("16:15:00"));
        $scheduleTwo->setEndTime(new \DateTime("17:15:00"));
        $scheduleTwo->setName('Monday CS Lab');

        $scheduleTwo->setRoom('CC 230');
        $scheduleTwo->setTerm('Spring');

        $manager->persist($scheduleTwo);

        $scheduleThree = new Schedule();

        $scheduleThree->setDayOfWeek(2);
        $scheduleThree->setStartTime(new \DateTime("18:00:00"));
        $scheduleThree->setEndTime(new \DateTime("20:00:00"));
        $scheduleThree->setName('Tuesday CS Lab');

        $scheduleThree->setRoom('CC 230');
        $scheduleThree->setTerm('Spring');

        $manager->persist($scheduleThree);

        $manager->flush();


    }

    public function getOrder() {
        return 4;
    }

}

?>